language: minimal

services: docker

sudo: required

env:
  - DOCKER_COMPOSE_VERSION=1.23.2
  - CHANGE_MINIKUBE_NONE_USER=true

before_install:
  - docker -v && docker-compose -v
  - sudo rm /usr/local/bin/docker-compose
  - curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname -s`-`uname -m` > docker-compose
  - chmod +x docker-compose
  - sudo mv docker-compose /usr/local/bin
  - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
  - chmod +x ./kubectl
  - sudo mv ./kubectl /usr/local/bin/kubectl  
  - curl -Lo minikube https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64 
  - chmod +x ./minikube 
  - sudo mv ./minikube /usr/local/bin/minikube
  - sudo minikube start --vm-driver=none --kubernetes-version=v1.7.0
  - minikube update-context
  - JSONPATH='{range .items[*]}{@.metadata.name}:{range @.status.conditions[*]}{@.type}={@.status};{end}{end}'; \until kubectl get nodes -o jsonpath="$JSONPATH" 2>&1 | grep -q "Ready=True"; do sleep 1; done
 


install:  
  - docker-compose -f udacity-c3-deployment/docker/docker-compose.yaml build 
  # - docker-compose -f udacity-c3-deployment/docker/docker-compose-build.yaml push
  - kubectl apply -f udacity-c3-deployment/k8s/aws-secret.yaml
  # - kubectl apply -f  udacity-c3-deployment/k8s/env-configmap.yaml
  # - kubectl delete udacity-c3-deployment/k8s/secret/env-secret
  # - kubectl create secret generic env-secret --from-literal=POSTGRESS_USERNAME="postgres" --from-literal=POSTGRESS_PASSWORD="database-1" 
  # - kubectl apply -f  udacity-c3-deployment/k8s/backend-feed-deployment.yaml 
  # - kubectl apply -f  udacity-c3-deployment/k8s/backend-feed-service.yaml 
  # - kubectl apply -f  udacity-c3-deployment/k8s/backend-user-deployment.yaml 
  # - kubectl apply -f  udacity-c3-deployment/k8s/backend-user-service.yaml 
  # - kubectl apply -f  udacity-c3-deployment/k8s/backend-feed-service.yaml 
  # - kubectl apply -f  udacity-c3-deployment/k8s/frontend-deployment.yaml 
  # - kubectl apply -f  udacity-c3-deployment/k8s/frontend-service.yaml 
  # - kubectl apply -f  udacity-c3-deployment/k8s/reverseproxy-deployment.yaml 
  # - kubectl apply -f  udacity-c3-deployment/k8s/reverseproxy-service.yaml
  # - kubectl apply -f  udacity-c3-deployment/k8s/validation-deployment.yaml 
  # - kubectl apply -f  udacity-c3-deployment/k8s/validation-service.yaml
  # - kubectl port-forward service/frontend 8100:8100 
  # - kubectl port-forward service/reverseproxy 8080:8080
  # - kubectl port-forward service/reverseproxy 8080:8080

